#$Id: Distributed-Annotation-System.spec.in,v 1.7 2006/07/26 21:43:31 boconnor Exp $
Distribution: Custom
Vendor: biopackages.net
Summary: Distributed Annotation System
Name: Distributed-Annotation-System
Version: 2.001
Release: %{revision}.%{distro}
Packager: boconnor@ucla.edu
License: GPL or Artistic
Group: Development/Libraries
URL: http://www.biodas.org/
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: perl, biopackages
Requires: httpd, httpd-devel, perl, mod_perl, perl-Apache-Test, perl-Apache-ParseFormData, perl-DBI, perl-DBD-Pg, perl-libwww-perl, perl-PDL, perl-Template-Toolkit, perl-URI, perl-bioperl, perl-Log-Log4perl, perl-PDL-NetCDF, perl-Package-Tools, perl-Crypt-SSLeay, perl-Devel-Symdump, perl-HTML-Tagset, perl-HTML-Parser, gbrowse, perl-Bio-MAGE, perl-Devel-CoreStack, perl-IPC-Run3
# FIXME: this doesn't work, it isn't more specific than the major revision number
#Requires: chado = 0.003-11.20051004
Requires: chado = 0.003

Source0: Distributed-Annotation-System-%{version}.tar.gz


%description
A DAS/2 server that connects to a Chado database instance.

Running the following commands in the source directory (cvs or tarball) setup a test server:
> perl Makefile.PL
> make
> make test

If successful, this should bring up a httpd process running on port 8529.
If you would like to use an alternate port, set $APACHE_PORT to the port
number you'd like to use before running 'make test', for example with
bash, this runs the test suite on port 8000

> APACHE_PORT=8000 make test

If you are installing directly from source (cvs or tarball) please set the following
environment variables before running "make install".

These variables should be in all caps.

> export target_web_dir=${build_temp_dir}/var/www/das/Hsa
> export target_web_install_dir=}/var/www/das/Hsa
> export species=human
> export species_version=17
> export species_abbr=Hsa
> export db_name=chado-Hsa-17
> export db_user=postgres
> export db_pass=postgres
> export db_host=localhost

%package Sce
Summary: A DAS/2 server configured to work with the Sce Chado database.
Group: Development/Web
#Requires: chado-Sce = S228C.0.003-4.cvs20051011
Requires: chado-Sce = S228C.0.003, Distributed-Annotation-System

%description Sce
A DAS/2 server configured to work with the Sce Chado database.

%package Hsa
Summary: A DAS/2 server configured to work with the Hsa Chado database.
Group: Development/Web
#Requires: chado-Hsa = 17.0.003-10.20050716
Requires: chado-Hsa = 17.0.003, Distributed-Annotation-System

%description Hsa
A DAS/2 server configured to work with the Hsa Chado database.

%package Mmu
Summary: A DAS/2 server configured to work with the Mmu Chado database.
Group: Development/Web
#Requires: chado-Mmu = 6.0.003-10.20050718
Requires: chado-Mmu = 6.0.003, Distributed-Annotation-System

%description Mmu
A DAS/2 server configured to work with the Mmu Chado database.

%prep
%setup -q -n Distributed-Annotation-System-%{version}

%build
CFLAGS="$RPM_OPT_FLAGS" perl Makefile.PL PREFIX=$RPM_BUILD_ROOT%{_prefix}  < /dev/null
make OPTIMIZE="$RPM_OPT_FLAGS"

%install
rm -rf $RPM_BUILD_ROOT

# these settings don't seem to work!!

eval `perl '-V:installarchlib'`
mkdir -p $RPM_BUILD_ROOT$installarchlib
export TARGET_WEB_INSTALL_DIR=/var/www/das
export TARGET_WEB_DIR=$RPM_BUILD_ROOT/var/www/das
export HTTPD_CONF_OUTPUT=1
export BUILD_ONLY_HTTPD_CONF=0
export SPECIES=core
export SPECIES_VERSION=1
export SPECIES_ABBR=core
export DB_NAME=chado
export DB_USER=postgres
export DB_PASS=postgres
export DB_HOST=localhost
%makeinstall

find $RPM_BUILD_ROOT -type f -a \( -name perllocal.pod -o -name .packlist \
  -o \( -name '*.bs' -a -empty \) \) -exec rm -f {} ';'
find $RPM_BUILD_ROOT -type d -depth -exec rmdir {} 2>/dev/null ';'
chmod -R u+w $RPM_BUILD_ROOT/*

[ -x %{_usr}/lib/rpm/brp-compress ] && %{_usr}/lib/rpm/brp-compress

find $RPM_BUILD_ROOT -type f \
| sed "s@^$RPM_BUILD_ROOT@@g" \
> %{name}-%{version}-%{release}-filelist

eval `perl -V:archname -V:installsitelib -V:installvendorlib -V:installprivlib`
for d in $installsitelib $installvendorlib $installprivlib; do
  [ -z "$d" -o "$d" = "UNKNOWN" -o ! -d "$RPM_BUILD_ROOT$d" ] && continue
  find $RPM_BUILD_ROOT$d/* -type d \
  | grep -v "/$archname\(/auto\)\?$" \
  | sed "s@^$RPM_BUILD_ROOT@%dir @g" \
  >> %{name}-%{version}-%{release}-filelist
done

if [ "$(cat %{name}-%{version}-%{release}-filelist)X" = "X" ] ; then
    echo "ERROR: EMPTY FILE LIST"
    exit 1
fi

export TARGET_WEB_INSTALL_DIR=/var/www/das
export TARGET_WEB_DIR=$RPM_BUILD_ROOT/var/www/das
export HTTPD_CONF_OUTPUT=1
export BUILD_ONLY_HTTPD_CONF=1
export SPECIES=human
export SPECIES_VERSION=17
export SPECIES_ABBR=Hsa
export DB_NAME=chado-Hsa-17
export DB_USER=postgres
export DB_PASS=postgres
export DB_HOST=localhost
make install_htdocs

export TARGET_WEB_INSTALL_DIR=/var/www/das
export TARGET_WEB_DIR=$RPM_BUILD_ROOT/var/www/das
export HTTPD_CONF_OUTPUT=1
export BUILD_ONLY_HTTPD_CONF=1
export SPECIES=yeast
export SPECIES_VERSION=S228C
export SPECIES_ABBR=Sce
export DB_NAME=chado-Sce-S228C
export DB_USER=postgres
export DB_PASS=postgres
export DB_HOST=localhost
make install_htdocs

export TARGET_WEB_INSTALL_DIR=/var/www/das
export TARGET_WEB_DIR=$RPM_BUILD_ROOT/var/www/das
export HTTPD_CONF_OUTPUT=1
export BUILD_ONLY_HTTPD_CONF=1
export SPECIES=mouse
export SPECIES_VERSION=6
export SPECIES_ABBR=Mmu
export DB_NAME=chado-Mmu-6
export DB_USER=postgres
export DB_PASS=postgres
export DB_HOST=localhost
make install_htdocs

%clean
rm -rf $RPM_BUILD_ROOT

%files -f %{name}-%{version}-%{release}-filelist
%defattr(-,root,root,-)

%doc README INSTALL etc/featuregraph.plpgsql etc/frange.plpgsql

%files Hsa
/var/www/das/conf/httpd_Hsa.conf

%files Sce
/var/www/das/conf/httpd_Sce.conf

%files Mmu
/var/www/das/conf/httpd_Mmu.conf

# FIXME: I don't know the var for the doc directory
%post
sudo su postgres -c 'psql chado < /usr/share/doc/%{name}-%{version}/featuregraph.plpgsql'
sudo su postgres -c 'psql chado < /usr/share/doc/%{name}-%{version}/frange.plpgsql'
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.rpmsave
echo 'Include /var/www/das/conf/httpd_core.conf' >> /etc/httpd/conf/httpd.conf
/etc/init.d/httpd restart

%post Hsa
sudo su postgres -c 'psql chado-Hsa-17 < /usr/share/doc/%{name}-%{version}/featuregraph.plpgsql'
sudo su postgres -c 'psql chado-Hsa-17 < /usr/share/doc/%{name}-%{version}/frange.plpgsql'
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.rpmsave
echo 'Include /var/www/das/conf/httpd_Hsa.conf' >> /etc/httpd/conf/httpd.conf
perl -p -i -e "s!# PerlAddVar  source                'human'!  PerlAddVar  source                'human'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart

%post Sce
sudo su postgres -c 'psql chado-Sce-S228C < /usr/share/doc/%{name}-%{version}/featuregraph.plpgsql'
sudo su postgres -c 'psql chado-Sce-S228C < /usr/share/doc/%{name}-%{version}/frange.plpgsql'
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.rpmsave
echo 'Include /var/www/das/conf/httpd_Sce.conf' >> /etc/httpd/conf/httpd.conf
perl -p -i -e "s!# PerlAddVar  source                'yeast'!  PerlAddVar  source                'yeast'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart

%post Mmu
sudo su postgres -c 'psql chado-Mmu-6 < /usr/share/doc/%{name}-%{version}/featuregraph.plpgsql'
sudo su postgres -c 'psql chado-Mmu-6 < /usr/share/doc/%{name}-%{version}/frange.plpgsql'
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.rpmsave
echo 'Include /var/www/das/conf/httpd_Mmu.conf' >> /etc/httpd/conf/httpd.conf
perl -p -i -e "s!# PerlAddVar  source                'mouse'!  PerlAddVar  source                'mouse'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart

%postun
perl -p -i -e 's!Include /var/www/das/conf/httpd_core.conf!!' /etc/httpd/conf/httpd.conf
/etc/init.d/httpd restart

%postun Hsa
perl -p -i -e 's!Include /var/www/das/conf/httpd_Hsa.conf!!' /etc/httpd/conf/httpd.conf
perl -p -i -e "s!  PerlAddVar  source                'human'!# PerlAddVar  source                'human'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart

%postun Sce
perl -p -i -e 's!Include /var/www/das/conf/httpd_Sce.conf!!' /etc/httpd/conf/httpd.conf
perl -p -i -e "s!  PerlAddVar  source                'yeast'!# PerlAddVar  source                'yeast'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart

%postun Mmu
perl -p -i -e 's!Include /var/www/das/conf/httpd_Mmu.conf!!' /etc/httpd/conf/httpd.conf
perl -p -i -e "s!  PerlAddVar  source                'mouse'!# PerlAddVar  source                'mouse'!g" /var/www/das/conf/httpd_core.conf
/etc/init.d/httpd restart


$Log: Distributed-Annotation-System.spec.in,v $
Revision 1.7  2006/07/26 21:43:31  boconnor
Updated DAS/2 to cvs HEAD

Revision 1.6  2006/07/15 01:55:18  boconnor
I updated the hardcoded /usr directory in all the spec files.  This was to support MacOS which installs all RPMs into /usr/local.  It uses a RPM macro now to make it platform neutral.  I've also updated some other SPEC files to support MacOS, I've done my best to ensure any changes don't affect other platforms negatively

Revision 1.5  2006/03/13 23:41:40  boconnor
Added depend for perl-Apache-Test

Revision 1.4  2006/03/01 09:57:59  boconnor
Updated the spec for DAS2

Revision 1.3  2006/02/13 18:07:55  boconnor
added deps for DAS/2

Revision 1.2  2006/02/12 11:15:50  boconnor
Added in some DB loading calls. The install process seems to have a hardcoded species (human) somewhere in it.  The output httpd setting for the chado base database is incorrect

Revision 1.1  2006/02/12 10:19:59  boconnor
Renamed the DAS/2 spec.in file


