#$Id: perl-Pod-Escapes.spec.in,v 1.1 2006/05/04 07:03:34 allenday Exp $
%define _unpackaged_files_terminate_build 0
Distribution: Custom
Vendor: biopackages.net
Summary: Unknown
Name: perl-Pod-Escapes
Version: 1.04
Release: %{revision}.%{distro}
Packager: allenday@jugular.ctrl.ucla.edu
License: GPL or Artistic
Group: Development/Libraries
Epoch: 0
URL: http://search.cpan.org/dist/Pod-Escapes/
BuildArch: noarch
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: perl, biopackages

Source0: Pod-Escapes-1.04.tar.gz

%description
README for Pod::Escapes
                                        Time-stamp: "2004-04-27 19:55:10 ADT"

NAME
    Pod::Escapes -- for resolving Pod E<...> sequences

SYNOPSIS
      use Pod::Escapes qw(e2char);
      ...la la la, parsing POD, la la la...
      $text = e2char($e_node->label);
      unless(defined $text) {
        print "Unknown E sequence \"", $e_node->label, "\"!";
      }
      ...else print/interpolate $text...

DESCRIPTION
    This module provides things that are useful in decoding Pod E<...>
    sequences. Presumably, it should be used only by Pod parsers and/or
    formatters.

    By default, Pod::Escapes exports none of its symbols. But you can request
    any of them to be exported. Either request them individually, as with `use
    Pod::Escapes qw(symbolname symbolname2...);', or you can do `use
    Pod::Escapes qw(:ALL);' to get all exportable symbols.

[...]

CAVEATS
    On Perl versions before 5.7, Unicode characters with a value over 255 (like
    lambda or emdash) can't be conveyed. This module does work under such early
    Perl versions, but in the place of each such character, you get a "?".
    Latin-1 characters (characters 160-255) are unaffected.

SEE ALSO
    perlpod

    perlpodspec

    Text::Unidecode

[...]


PREREQUISITES

This suite requires Perl 5; I've only used it under Perl 5.004, so for
anything lower, you're on your own.

Pod::Escapes doesn't use any nonstandard modules.


INSTALLATION

You install Pod::Escapes, as you would install any perl module
library, by running these commands:

   perl Makefile.PL
   make
   make test
   make install

If you want to install a private copy of Pod::Escapes in your home
directory, then you should try to produce the initial Makefile with
something like this command:

  perl Makefile.PL LIB=~/perl


DOCUMENTATION

POD-format documentation is included in Escapes.pm.  POD is readable
with the 'perldoc' utility.  See ChangeLog for recent changes.


MACPERL INSTALLATION NOTES

Don't bother with the makefiles.  Just make a Pod directory in your
MacPerl site_lib or lib directory, and move Escapes.pm into there.


SUPPORT

Questions, bug reports, useful code bits, and suggestions for
Pod::Escapes should just be sent to me at sburke@cpan.org


AVAILABILITY

The latest version of Pod::Escapes is available from the
Comprehensive Perl Archive Network (CPAN).  Visit
<http://www.perl.com/CPAN/> to find a CPAN site near you.


%prep
%setup -q -n Pod-Escapes-%{version}

%build
CFLAGS="$RPM_OPT_FLAGS" perl Makefile.PL PREFIX=$RPM_BUILD_ROOT%{_prefix}  < /dev/null
make OPTIMIZE="$RPM_OPT_FLAGS"
make test

%install
rm -rf $RPM_BUILD_ROOT

eval `perl '-V:installarchlib'`
mkdir -p $RPM_BUILD_ROOT$installarchlib
%makeinstall

find $RPM_BUILD_ROOT -type f -a \( -name perllocal.pod -o -name .packlist \
  -o \( -name '*.bs' -a -empty \) \) -exec rm -f {} ';'
find $RPM_BUILD_ROOT -type d -depth -exec rmdir {} 2>/dev/null ';'
chmod -R u+w $RPM_BUILD_ROOT/*

[ -x /usr/lib/rpm/brp-compress ] && /usr/lib/rpm/brp-compress

find $RPM_BUILD_ROOT -type f \
| sed "s@^$RPM_BUILD_ROOT@@g" \
> %{name}-%{version}-%{release}-filelist

eval `perl -V:archname -V:installsitelib -V:installvendorlib -V:installprivlib`
for d in $installsitelib $installvendorlib $installprivlib; do
  [ -z "$d" -o "$d" = "UNKNOWN" -o ! -d "$RPM_BUILD_ROOT$d" ] && continue
  find $RPM_BUILD_ROOT$d/* -type d \
  | grep -v "/$archname\(/auto\)\?$" \
  | sed "s@^$RPM_BUILD_ROOT@%dir @g" \
  >> %{name}-%{version}-%{release}-filelist
done

if [ "$(cat %{name}-%{version}-%{release}-filelist)X" = "X" ] ; then
    echo "ERROR: EMPTY FILE LIST"
    exit 1
fi

%clean
rm -rf $RPM_BUILD_ROOT

%files -f %{name}-%{version}-%{release}-filelist
%defattr(-,root,root,-)

#%changelog
#* Thu May  4 2006 allenday@jugular.ctrl.ucla.edu - 1.04-%{revision}
#- Specfile autogenerated.
$Log: perl-Pod-Escapes.spec.in,v $
Revision 1.1  2006/05/04 07:03:34  allenday
import

