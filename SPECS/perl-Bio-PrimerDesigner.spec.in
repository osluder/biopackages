#$Id: perl-Bio-PrimerDesigner.spec.in,v 1.1 2006/07/10 20:07:19 boconnor Exp $
Distribution: Custom
Vendor: biopackages.net
Summary: Design PCR primers using primer3 and epcr
Name: perl-Bio-PrimerDesigner
Version: 0.01
Release: %{revision}.%{distro}
Packager: allenday@jugular.ctrl.ucla.edu
License: GPL or Artistic
Group: Development/Libraries
URL: http://search.cpan.org/dist/Bio-PrimerDesigner/
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: perl, biopackages
Requires: primer3, perl-Class-Base, perl-libwww-perl
Source0: Bio-PrimerDesigner-0.01.tar.gz

%description
NAME
    Bio::PrimerDesigner - Design PCR Primers using primer3 and epcr

SYNOPSIS
      use Bio::PrimerDesigner;

      my $pd = Bio::PrimerDesigner->new;

      #
      # Define the DNA sequence, etc.
      #
      my $dna   = "CGTGC...TTCGC";
      my $seqID = "sequence 1";

      #
      # Define design parameters (native primer3 syntax)
      #
      my %params = ( 
          PRIMER_NUM_RETURN   => 2,
          PRIMER_SEQUENCE_ID  => $seqID,
          SEQUENCE            => $dna,
          PRIMER_PRODUCT_SIZE => '500-600'
      );

      #
      # Or use input aliases
      #
      %param = ( 
          num                 => 2,
          id                  => $seqID,
          seq                 => $dna,
          sizerange           => '500-600'
      ); 

      #
      # Design primers
      #
      my $results = $pd->design( %params ) or die $pd->error;

      #
      # Make sure the design was successful
      #
      die( "No primers found\n", $results->raw_data )
          unless $results->left;

      #
      # Get results (single primer set)
      #
      my $left_primer  = $results->left;
      my $right_primer = $results->right;
      my $left_tm      = $results->lefttm;

      #
      # Get results (multiple primer sets)
      #
      my @left_primers  = $results->left(1..3);
      my @right_primers = $results->right(1..3);
      my @left_tms      = $results->lefttm(1..3);

DESCRIPTION
    Bio::PrimerDesigner provides a low-level interface to the primer3 and
    epcr binary executables and supplies methods to return the results.
    Because primer3 and e-PCR are only available for Unix-like operating
    systems, Bio::PrimerDesigner offers the ability to accessing the primer3
    binary via a remote server. Local installations of primer3 or e-PCR on
    Unix hosts are also supported.

METHODS
  binary_path
    Gets/sets path to the primer3 binary.

  program
    Gets/sets which program to use.

  list_aliases
    Lists aliases for primer3 input/output options

  list_params
    Lists input options for primer3 or epcr, depending on the context

  method
    Gets/sets method of accessing primer3 or epcr binaries.

  url
    Gets/sets the URL for accessing the remote binaries.

  design
    Makes the primer design or e-PCR request. Returns an
    Bio::PrimerDesigner::Result object.

  verify
    Tests local installations of primer3 or e-PCR to ensure that they are
    working properly.

  epcr_example
    Run test e-PCR job. Returns an Bio::PrimerDesigner::Results object.

  primer3_example
    Runs a sample design job for primers. Returns an
    Bio::PrimerDesigner::Results object.

AUTHORS
    Copyright (C) 2003 Sheldon McKay <smckay@bcgsc.bc.ca>, Ken Y. Clark
    <kclark@cpan.org>.

LICENSE
    This program is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; version 2.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.

SEE ALSO
    Bio::PrimerDesigner::primer3, Bio::PrimerDesigner::epcr.



%prep
%setup -q -n Bio-PrimerDesigner-%{version}

%build
CFLAGS="$RPM_OPT_FLAGS" perl Makefile.PL PREFIX=$RPM_BUILD_ROOT%{_prefix}  < /dev/null
make OPTIMIZE="$RPM_OPT_FLAGS"

%install
rm -rf $RPM_BUILD_ROOT

eval `perl '-V:installarchlib'`
mkdir -p $RPM_BUILD_ROOT$installarchlib
%makeinstall

find $RPM_BUILD_ROOT -type f -a \( -name perllocal.pod -o -name .packlist \
  -o \( -name '*.bs' -a -empty \) \) -exec rm -f {} ';'
find $RPM_BUILD_ROOT -type d -depth -exec rmdir {} 2>/dev/null ';'
chmod -R u+w $RPM_BUILD_ROOT/*

[ -x /usr/lib/rpm/brp-compress ] && /usr/lib/rpm/brp-compress

find $RPM_BUILD_ROOT -type f \
| sed "s@^$RPM_BUILD_ROOT@@g" \
> %{name}-%{version}-%{release}-filelist

eval `perl -V:archname -V:installsitelib -V:installvendorlib -V:installprivlib`
for d in $installsitelib $installvendorlib $installprivlib; do
  [ -z "$d" -o "$d" = "UNKNOWN" -o ! -d "$RPM_BUILD_ROOT$d" ] && continue
  find $RPM_BUILD_ROOT$d/* -type d \
  | grep -v "/$archname\(/auto\)\?$" \
  | sed "s@^$RPM_BUILD_ROOT@%dir @g" \
  >> %{name}-%{version}-%{release}-filelist
done

if [ "$(cat %{name}-%{version}-%{release}-filelist)X" = "X" ] ; then
    echo "ERROR: EMPTY FILE LIST"
    exit 1
fi

%clean
rm -rf $RPM_BUILD_ROOT

%files -f %{name}-%{version}-%{release}-filelist
%defattr(-,root,root,-)

$Log: perl-Bio-PrimerDesigner.spec.in,v $
Revision 1.1  2006/07/10 20:07:19  boconnor
Initial addition of spec.in files from the unstable biopackages repo

