#$Id: perl-Net-Dict.spec.in,v 1.3 2006/07/15 01:55:22 boconnor Exp $
Distribution: Custom
Vendor: Custom
Summary: Unknown
Name: perl-Net-Dict
Epoch: 1
Version: 2.07
Release: %{revision}.%{distro}
Packager: allenday@sumo.genetics.ucla.edu
License: GPL or Artistic
Group: Development/Libraries
URL: http://search.cpan.org/dist/Net-Dict/
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: perl, biopackages
Requires: perl-AppConfig-Std
BuildArch: noarch
Source0: Net-Dict-2.07.tar.gz

%description

				Net::Dict
				  v2.07

This distribution contains the Net::Dict module for Perl.
Net::Dict is a class implementing a simple client API
for the DICT protocol defined in RFC2229.

To install this module, you should just have to run the following:

	% perl Makefile.PL
	% make
	% make test
	% make install

When you run "perl Makefile.PL" you'll be asked for the hostname
and port for the DICT server used when testing. If you're not
going to run "make install", then just press return. You should
be able to just press return on the two questions anyway.

This module now supports the AUTH optional capability. To use this
you will need the Digest::MD5 module, available from CPAN.

The module is documented using pod. When you "make install", you
will get a man-page Net::Dict. You can also generate HTML using pod2html:

	% pod2html lib/Net/Dict.pm

Three sample clients are included in this distribution.
Any additional modules required are noted, and available from CPAN.

    dict
	A basic command-line client, based on the C dict client
	by Rik Faith.
	Requires: AppConfig, AppConfig::Std

    tkdict
	A first cut at a Perl/Tk client. This is pretty rough;
	any suggestions or patches are welcome!
	Requires: AppConfig, AppConfig::Std, Tk, Tk::Dialog

    examples/simple.pl
	Illustrates basic use of Net::Dict.

Net::Dict was written by Dmitry Rubinstein, but is now maintained by me.


Neil Bowers <neil@bowers.com>


%prep
%setup -q -n Net-Dict-%{version}

%build
CFLAGS="$RPM_OPT_FLAGS" perl Makefile.PL PREFIX=$RPM_BUILD_ROOT%{_prefix}  < /dev/null
make OPTIMIZE="$RPM_OPT_FLAGS"

%install
rm -rf $RPM_BUILD_ROOT

eval `perl '-V:installarchlib'`
mkdir -p $RPM_BUILD_ROOT$installarchlib
%makeinstall

find $RPM_BUILD_ROOT -type f -a \( -name perllocal.pod -o -name .packlist \
  -o \( -name '*.bs' -a -empty \) \) -exec rm -f {} ';'
find $RPM_BUILD_ROOT -type d -depth -exec rmdir {} 2>/dev/null ';'
chmod -R u+w $RPM_BUILD_ROOT/*

[ -x %{_usr}/lib/rpm/brp-compress ] && %{_usr}/lib/rpm/brp-compress

find $RPM_BUILD_ROOT -type f \
| sed "s@^$RPM_BUILD_ROOT@@g" \
> %{name}-%{version}-%{release}-filelist

eval `perl -V:archname -V:installsitelib -V:installvendorlib -V:installprivlib`
for d in $installsitelib $installvendorlib $installprivlib; do
  [ -z "$d" -o "$d" = "UNKNOWN" -o ! -d "$RPM_BUILD_ROOT$d" ] && continue
  find $RPM_BUILD_ROOT$d/* -type d \
  | grep -v "/$archname\(/auto\)\?$" \
  | sed "s@^$RPM_BUILD_ROOT@%dir @g" \
  >> %{name}-%{version}-%{release}-filelist
done

if [ "$(cat %{name}-%{version}-%{release}-filelist)X" = "X" ] ; then
    echo "ERROR: EMPTY FILE LIST"
    exit 1
fi

%clean
rm -rf $RPM_BUILD_ROOT

%files -f %{name}-%{version}-%{release}-filelist
%defattr(-,root,root,-)

$Log: perl-Net-Dict.spec.in,v $
Revision 1.3  2006/07/15 01:55:22  boconnor
I updated the hardcoded /usr directory in all the spec files.  This was to support MacOS which installs all RPMs into /usr/local.  It uses a RPM macro now to make it platform neutral.  I've also updated some other SPEC files to support MacOS, I've done my best to ensure any changes don't affect other platforms negatively

Revision 1.2  2006/01/04 22:26:11  allenday
sync changes log to cvs log

