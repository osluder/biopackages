#$Id: R-R.methodsS3.spec.in,v 1.2 2008/07/10 00:25:56 bret_harry Exp $
Vendor: biopackages.net
Group: Applications/Scientific
Packager: Bret Harry <janusz@gasper.zealcorp.com>
Version: 1.0.3
Release: %{revision}.%{distro}
Name: R-R.methodsS3
Summary: Utility function for defining S3 methods`
License: LGPL >= 2.1
URL: http://cran.r-project.org/web/packages/R.methodsS3/index.html
Source0: http://cran.r-project.org/src/contrib/R.methodsS3_%{version}.tar.gz
Requires: R >= 2.2.0
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRequires: %{requires}, gcc

%description
Methods that simplify the setup of S3 generic functions and S3 methods. Major effort has been made in making definition of methods as simple as possible with a minimum of maintainance for package developers. For example, generic functions are created automatically, if missing, and name conflict are automatically solved, if possible. The method setMethodS3() is a good start for those who in the future want to migrate to S4. This is a cross-platform package implemented in pure R and is generating standard S3 methods. 

%prep
%setup -n R.methodsS3

%build
export CFLAGS="%{optflags} -fPIC"
export CXXFLAGS="%{optflags} -fPIC"
rm -rf ${RPM_BUILD_ROOT}
mkdir -p ${RPM_BUILD_ROOT}%{_libdir}/R/library
R CMD INSTALL --library=$RPM_BUILD_ROOT%{_libdir}/R/library %{SOURCE0}

rm -f $RPM_BUILD_ROOT%{_libdir}/R/library/R.css ;

[ -x %{_usr}/lib/rpm/brp-compress ] && %{_usr}/lib/rpm/brp-compress

find %{buildroot}%{_prefix} -type f -o -type l | sed "s@^%{buildroot}@@g" > %{name}-%{version}-%{release}-filelist

%files -f %{name}-%{version}-%{release}-filelist

%clean
rm -rf ${RPM_BUILD_ROOT}

%changelog
#$Log: R-R.methodsS3.spec.in,v $
#Revision 1.2  2008/07/10 00:25:56  bret_harry
#bumped version
#
#Revision 1.1  2008/07/09 21:36:00  bret_harry
#new spec
#
#Revision 1.11  2008/06/15 21:32:34  bret_harry
#updated URIs
#
