#$Id: perl-PDL.spec.in,v 1.2 2006/01/04 22:26:11 allenday Exp $
Distribution: Custom
Vendor: biopackages.net
Summary: Perl Data Language 
Name: perl-PDL
Version: 2.4.2
Release: %{revision}.%{distro}
Packager: allenday@ucla.edu
License: GPL or Artistic
Group: Development/Libraries
URL: http://search.cpan.org/dist/PDL/
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: perl, biopackages, gcc, gcc-g77
BuildRequires: perl-ExtUtils-F77, perl-Inline, xorg-x11-Mesa-libGLU
Requires: perl-ExtUtils-F77, perl-Inline, perl-PGPLOT, xorg-x11-Mesa-libGLU
Source0: PDL-2.4.2.tar.gz
Patch0: PDL-taint.patch
Epoch: 1

#weird
Provides: perl(PDL::Config)
Provides: perl(PDL::Graphics::OpenGL)
Provides: perl(PDL::Graphics::OpenGLQ)
Provides: perl(PDL::Graphics::TriD::GL)
Provides: perl(PDL::Graphics::TriD::Objects)
Provides: perl(PDL::Lite)
Provides: perl(PDL::LiteF)
Provides: perl(PDL::PP::CType)
Provides: perl(PDL::PP::Dims)
Provides: perl(PDL::PP::PDLCode)
Provides: perl(PDL::PP::SymTab)
Provides: perl(PDL::PP::XS)
Provides: perl(Win32::DDE::Client)

%description
PDL is the Perl Data Language, a perl extension that is designed for scientific
and bulk numeric data processing and display. It extends perl's syntax and
includes fully vectorized, multidimensional array handling, plus several paths
for device-independent graphics output.

For basic information on the PDL language, see the pdl(1) (lowercase) man page.

You can run PDL programs directly as perl scripts that include the PDL module
(with "use PDL;"), or via an interactive shell (see the perldl(1) man page).

The PDL language extension includes about a dozen perl modules that form the
core of the language, plus additional modules that add further functionality.
The perl module "PDL" loads all of the core modules automatically, making their
functions available in the current perl namespace. See also PDL::Lite or
PDL::LiteF if start-up time becomes an issue.

Note that the PDL::NiceSlice syntax is NOT automatically loaded by use PDL;.
If you want to use the extended slicing syntax in a standalone script, you must
also say use PDL::NiceSlice;.

The PDL::Math module has been added to the list of modules for versions later
than 2.3.1. Note that PDL::Math is still not included in the Lite and LiteF
start-up modules.

%prep
%setup -q -n PDL-%{version}
%patch0 -p1

%build
CFLAGS="$RPM_OPT_FLAGS -fPIC" perl Makefile.PL PREFIX=$RPM_BUILD_ROOT%{_prefix}  < /dev/null
perl -p -i -e 's!-c -o!-fPIC -c -o!' Lib/Slatec/Makefile
CFLAGS="$RPM_OPT_FLAGS -fPIC" make OPTIMIZE="$RPM_OPT_FLAGS -fPIC"

%install
rm -rf $RPM_BUILD_ROOT

eval `perl '-V:installarchlib'`
mkdir -p $RPM_BUILD_ROOT$installarchlib
%makeinstall

find $RPM_BUILD_ROOT -type f -a \( -name perllocal.pod -o -name .packlist \
  -o \( -name '*.bs' -a -empty \) \) -exec rm -f {} ';'
find $RPM_BUILD_ROOT -type d -depth -exec rmdir {} 2>/dev/null ';'
chmod -R u+w $RPM_BUILD_ROOT/*

[ -x /usr/lib/rpm/brp-compress ] && /usr/lib/rpm/brp-compress

find $RPM_BUILD_ROOT -type f \
| sed "s@^$RPM_BUILD_ROOT@@g" \
> %{name}-%{version}-%{release}-filelist

eval `perl -V:archname -V:installsitelib -V:installvendorlib -V:installprivlib`
for d in $installsitelib $installvendorlib $installprivlib; do
  [ -z "$d" -o "$d" = "UNKNOWN" -o ! -d "$RPM_BUILD_ROOT$d" ] && continue
  find $RPM_BUILD_ROOT$d/* -type d \
  | grep -v "/$archname\(/auto\)\?$" \
  | sed "s@^$RPM_BUILD_ROOT@%dir @g" \
  >> %{name}-%{version}-%{release}-filelist
done

if [ "$(cat %{name}-%{version}-%{release}-filelist)X" = "X" ] ; then
    echo "ERROR: EMPTY FILE LIST"
    exit 1
fi

%clean
rm -rf $RPM_BUILD_ROOT

%files -f %{name}-%{version}-%{release}-filelist
%defattr(-,root,root,-)

$Log: perl-PDL.spec.in,v $
Revision 1.2  2006/01/04 22:26:11  allenday
sync changes log to cvs log

