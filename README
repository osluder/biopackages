#$Id: README,v 1.3 2005/08/04 02:52:03 allenday Exp $
1. SETTING UP THE ENVIRONMENT

Run 'make prep'.  This will overwrite ~/.rpmmacros with a version
that will make the biopackages checkout top-level directory your
default rpm build directory.  If you're not happy with this,
create a new user just for doing builds -- this setup is unlikely
to change.

2. AUTOMATICALLY CREATING SPEC FILES

  A. For Perl modules from CPAN.
  Not documented yet.  It can be done.  Read the Makefile for hints

3. MANUALLY CREATING SPEC FILES

A few rules for creating new specfiles.  The purpose of these is
to ensure the RPM package release numbers stay in sync with the
CVS version.  Technically, what's happening is the RCS tag '$ Id $'
is being sniffed to produce the RPM release number.

  A. DO NOT CREATE .spec FILES.  Create .spec.in files instead.
  The reason for this is that we need to do some token
  replacement on the file to do the CVS version linking.

  B. At the top of every .spec.in, add a line like this:

       #$ Id $

  C. Set the RPM 'Release' key to '%{revision}-%{distro}'.  E.g.,

       Release: %{revision}-%{distro}

     If your CVS version is 1.1, the .spec file generated from
     the .spec.in file will be 1.1-%{distro}.

     The %{distro} tag is a biopackages-specific RPM macro that
     appends the architcture, date, OS abbreviation, and 'bp'
     biopackages identifier to the end of the RPM file resulting
     from the build.  While this isn't absolutely necessary, it
     is recommended because it allows all biopackages packages a
     consistent naming style.

When you have finished your .spec.in file, run "make specs".
This target iterates over all .spec.in files and generates their
corresponding .spec files.

4. BUILDING

You shouldn't need to run 'rpmbuild ...' yourself, this is encapsulated
in the 'buildall' make target.  In a nutsuell, this target converts
.spec.in files to .spec files, and in turn .spec files to .built files.
A .built file indicates the spec was successfully compiled on the local
system.  The .built file contains a log of the build process.

Always remember to cvs add and commit all .spec.in files in your SPECS/
directory before building packages for distribution.  This ensures your
rpm released versions are in sync with your CVS file revisions.

Some of the .spec.in files can't be used to create .spec files.  These
few are specs that are platform-specific.  For instance, we only want
to build 'rpm' and 'yum' on the mac, because they're not available.
For centos and fedora we just depend on RedHat to maintain the packages
for us.
